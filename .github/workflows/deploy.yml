# 
# GitHub Actions workflow.
#
# Automatically deploys the applications to Kubernetes on push to the main branch.
#

name: Deploy Applications

on:
  #
  # Deploy the applications on push to the main branch.
  #
  push: 
    branches:
      - main
    paths:
      - book_catalog/**
      - inventory_management/**
  
  #
  # Allows deployment to be invoked manually through the GitHub Actions user interface.
  #
  workflow_dispatch: 

jobs:

  deploy:
    runs-on: ubuntu-latest
    
    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.ACR_NAME }}.azurecr.io
      REGISTRY_UN: ${{ secrets.ACR_NAME }}
      REGISTRY_PW: ${{ secrets.AZURE_CLIENT_SECRET }}
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  
    steps:
      
      # Checks-out your repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3

      #
      # Logs in to Azure Container Registry.
      #
      - name: Log in to Azure Container Registry
        run: |
          echo "${{ secrets.AZURE_CLIENT_SECRET }}" | docker login "${{ env.CONTAINER_REGISTRY }}" --username "${{ env.REGISTRY_UN }}" --password-stdin

      #
      # Builds and publishes the Docker images.
      #
      - name: Build and Push Images
        run: |
          docker build -t ${{ env.CONTAINER_REGISTRY }}/book_catalog:latest ./book_catalog
          docker push ${{ env.CONTAINER_REGISTRY }}/book_catalog:latest
          docker build -t ${{ env.CONTAINER_REGISTRY }}/inventory_management:latest ./inventory_management
          docker push ${{ env.CONTAINER_REGISTRY }}/inventory_management:latest

      #
      # Installs Kubectl and connects it to the cluster.
      #
      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.24.2
      
      #
      # Deploys the applications to Kubernetes.
      #
      - name: Deploy Applications
        run: |
          kubectl apply -f scripts/kubernetes/deployment.yaml
